var search_data = {"index":{"searchIndex":["chef","dirsrv","add_entry()","bind()","delete_entry()","get_entry()","modify_entry()","new()","search()"],"longSearchIndex":["chef","chef::dirsrv","chef::dirsrv#add_entry()","chef::dirsrv#bind()","chef::dirsrv#delete_entry()","chef::dirsrv#get_entry()","chef::dirsrv#modify_entry()","chef::dirsrv::new()","chef::dirsrv#search()"],"info":[["Chef","","Chef.html","",""],["Chef::Dirsrv","","Chef/Dirsrv.html","",""],["add_entry","Chef::Dirsrv","Chef/Dirsrv.html#method-i-add_entry","( r )","<p>Add Entry\n<p>This method accepts a connection resource object. It is intended to be used\nwith Chef::Resource::DirsrvEntry …\n"],["bind","Chef::Dirsrv","Chef/Dirsrv.html#method-i-bind","( host, port, credentials, cookbook_name )","<p>Bind\n<p>This method should not be used directly. It is used to bind to the\ndirectory server. The cookbook_name …\n"],["delete_entry","Chef::Dirsrv","Chef/Dirsrv.html#method-i-delete_entry","( r )","<p>Delete Entry\n<p>Expects a connection resource object, along with a .dn method that returns\nthe Distinguished …\n"],["get_entry","Chef::Dirsrv","Chef/Dirsrv.html#method-i-get_entry","( r )","<p>Get Entry\n<p>This method accepts a connection resource object. It is intended to be used\nwith Chef::Resource::DirsrvEntry …\n"],["modify_entry","Chef::Dirsrv","Chef/Dirsrv.html#method-i-modify_entry","( r, ops )","<p>Modify Entry\n<p>Accepts a connection resource object as the first argument, followed by an\nArray of ldap …\n"],["new","Chef::Dirsrv","Chef/Dirsrv.html#method-c-new","()","<p>Constraints\n<p>Chef libraries are evaluated before the recipe that places the chef_gem\nthat it needs is put …\n"],["search","Chef::Dirsrv","Chef/Dirsrv.html#method-i-search","( r, basedn, *constraints )","<p>Search\n<p>This method is used to search the directory server. It accepts the\nconnection resource object described …\n"]]}}